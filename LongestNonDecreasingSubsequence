import java.util.Arrays;

/**
 * Given a sequence of N numbers – A[1] , A[2] , …, A[N] . Find the length of the longest non-decreasing sequence.
 * @author kayethi
 *
 */
public class LongestNonDecreasingSequence {
	
	public static void main(String[] args){
		LongestNonDecreasingSequence s = new LongestNonDecreasingSequence();
		int[] values = {5,3,4,8,6,7};
		System.out.println(s.findlength(values));
	}

	private int findlength(int[] values) {
		int N= values.length;int max=0;
		int[] length = new int[N];
		Arrays.fill(length, 1);
		for (int i = 1; i < N; i++) {
			for (int j = 0; j < i; j++) {
				if(values[j]<=values[i] && length[i]<length[j]+1){
					length[i]=length[j]+1;
				}
				if(max<length[i]) max=length[i];
			}	
		}//for i 0->N
		/*for (int i = 0; i < length.length; i++) {
			System.out.println(length[i]);
			
		}*/
		return max;
	}
}
